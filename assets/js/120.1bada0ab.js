(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{501:function(t,v,_){"use strict";_.r(v);var e=_(15),d=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"富文本编辑器开发系列-ueditor对-range对象的封装"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#富文本编辑器开发系列-ueditor对-range对象的封装"}},[t._v("#")]),t._v(" 富文本编辑器开发系列——"),_("code",[t._v("Ueditor")]),t._v("对 "),_("code",[t._v("range")]),t._v("对象的封装")]),t._v(" "),_("h2",{attrs:{id:"ueditor封装的range的api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ueditor封装的range的api"}},[t._v("#")]),t._v(" UEditor封装的Range的API")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("属性或方法")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("code",[t._v("startContainer")])]),t._v(" "),_("td",[t._v("只读，开始节点——当前拖蓝的起点所在的节点")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("startOffset")])]),t._v(" "),_("td",[t._v("只读，当前拖蓝起点相对于开始节点的起始位置的偏移量")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("endContaier")])]),t._v(" "),_("td",[t._v("只读，结束节点——当前拖蓝的终点所在的节点")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("endOffset")])]),t._v(" "),_("td",[t._v("只读，当前拖蓝结束点相对于结束节点起始位置的偏移量")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("collapsed")])]),t._v(" "),_("td",[t._v("只读，当前拖蓝是否闭合")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("document")])]),t._v(" "),_("td",[t._v("只读，当前拖蓝所属的"),_("code",[t._v("Document")])])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("new Range(doc)")])]),t._v(" "),_("td",[t._v("创建一个跟"),_("code",[t._v("doc")]),t._v("绑定的空的拖蓝")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("cloneContents()")])]),t._v(" "),_("td",[t._v("克隆拖蓝的内容到一个文档片段中,如果拖蓝是闭合的将返回"),_("code",[t._v("null")])])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("deleteContents()")])]),t._v(" "),_("td",[t._v("删除当前拖蓝中的所有内容")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("extractContents()")])]),t._v(" "),_("td",[t._v("将当前拖蓝的内容移动到一个文档片段里，原内容将从"),_("code",[t._v("DOM")]),t._v("树上移除，这将导致拖蓝闭合。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setStart(Node,offset)")])]),t._v(" "),_("td",[t._v("设置拖蓝的开始节点和偏移量")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setEnd(node,offset)")])]),t._v(" "),_("td",[t._v("设置拖蓝的结束节点和偏移量")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setStartAfter(node)")])]),t._v(" "),_("td",[t._v("将拖蓝开始位置设置到给定节点之后")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setStartBefore(node)")])]),t._v(" "),_("td",[t._v("将拖蓝的开始位置设置到给定节点之前")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setEndAfter(node)")])]),t._v(" "),_("td",[t._v("将拖蓝结束位置设置到给定节点之后")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setEndBefore(node)")])]),t._v(" "),_("td",[t._v("将拖蓝结束位置设置到给定节点之前")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setStartAtFirst(node)")])]),t._v(" "),_("td",[t._v("设置拖蓝的开始位置到给定节点的第一个子节点之前")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setStartAtLast(node)")])]),t._v(" "),_("td",[t._v("设置拖蓝的开始位置到给定节点的最后一个节点之后")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setEndAtFirst(node)")])]),t._v(" "),_("td",[t._v("设置拖蓝的结束位置到给定节点的第一个子节点之前")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setEndAtLast(node)")])]),t._v(" "),_("td",[t._v("这是拖蓝的结束位置到给定节点的最后一个子节点最后")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("selectNode(node)")])]),t._v(" "),_("td",[t._v("选中给定节点")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("selectNodeContents(node)")])]),t._v(" "),_("td",[t._v("选中给定节点的所有子孙节点（包含它自身）")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("cloneRange()")])]),t._v(" "),_("td",[t._v("克隆当前拖蓝对象")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("collapse(toStart)")])]),t._v(" "),_("td",[t._v("闭合当前拖蓝, "),_("code",[t._v("toStart")]),t._v(" :闭合方向，"),_("code",[t._v("true")]),t._v("向起点闭合，"),_("code",[t._v("false")]),t._v("向终点闭合")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("shrinkBoundary(ignoreEnd)")])]),t._v(" "),_("td",[t._v("调整拖蓝的开始位置和结束位置，使其收缩到最小的位置，跨节点的拖蓝将收缩到最内层元素中，"),_("code",[t._v("ignoreEnd")]),t._v("：是否忽略对结束位置的调整")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("getCommonAncestor(includeSelf,ignoreTextNode)")])]),t._v(" "),_("td",[t._v("获取离当前选区内包含的所有节点最近的公共祖先节点。"),_("code",[t._v("includeSelf")]),t._v("：获取到的公共祖先节点是否可以是当前选区的开始（结束）节点。"),_("code",[t._v("ignoreTextNode")]),t._v(": 是否忽略类型为文本节点的祖先节点。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("trimBoundary(ignoreEnd)")])]),t._v(" "),_("td",[t._v("调整当前拖蓝的边界容器（开始节点和结束节点），如果容器是文本节点，则调整到包含该文本节点的父节点上."),_("code",[t._v("ignoreEnd")]),t._v(",是否忽略对结束边界的调整")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("txtToElmBoundary(ignoreCollapsed)")])]),t._v(" "),_("td",[t._v("如果选区在文本边界上，就扩展拖蓝到文本的父节点上。"),_("code",[t._v("ignoreCollapsed")]),t._v("：当拖蓝闭合时是否执行此操作")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("insertNode(node)")])]),t._v(" "),_("td",[t._v("在当前拖蓝的开始位置前插入节点，新插入的节点会被该拖蓝包含")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("setCursor(toEnd)")])]),t._v(" "),_("td",[t._v("闭合拖蓝，并且定位光标到闭合后的位置。"),_("code",[t._v("toEnd")]),t._v("：闭合的方向")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("createBookmark(serialize)")])]),t._v(" "),_("td",[t._v("创建当前拖蓝的的一个书签，记录下当前拖蓝的位置，方便当"),_("code",[t._v("DOM")]),t._v("树改变时，还能找回原来是选区位置。"),_("code",[t._v("serialize")]),t._v(": 控制返回的标记位置是对当前位置的引用还是ID。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("moveToBookmark(bookmark)")])]),t._v(" "),_("td",[t._v("调整当前拖蓝的边界到书签位置，并删除该书签对象所标记的位置内的节点。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("enlarge(toBlock)")])]),t._v(" "),_("td",[t._v("调整拖蓝的边界，使其“放大‘到最近的父节点，"),_("code",[t._v("toBlock")]),t._v(": 是否要求扩大后的父节点必须是"),_("code",[t._v("block")]),t._v("节点（块级节点）")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("adjustmentBoundary()")])]),t._v(" "),_("td",[t._v("调整拖蓝的边界，使其”缩小“到最合适的位置")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("applyInlineStyle(tagName,attrs)")])]),t._v(" "),_("td",[t._v("给拖蓝中的内容添加给定的行内标签。"),_("code",[t._v("tagName")]),t._v(":标签名。"),_("code",[t._v("attrs")]),t._v(": 可选，为行内标签添加初始属性")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("removeInlineStyle(tagName)")])]),t._v(" "),_("td",[t._v("移除当前拖蓝内指定的行内标签，但保留其中的内容")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("removeInlineStyle(tagNameArr)")])]),t._v(" "),_("td",[t._v("移除当前拖蓝内指定的一组行内标签，但保留其中内容")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("getClosedNote()")])]),t._v(" "),_("td",[t._v("获取当前选中的自闭合节点")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("select()")])]),t._v(" "),_("td",[t._v("在页面上高亮拖蓝所表示的区域")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("scrollToView(win, offset)")])]),t._v(" "),_("td",[t._v("滚动页面到当前拖蓝开始的位置，"),_("code",[t._v("win")]),t._v(":当前拖蓝对象所属的"),_("code",[t._v("window")]),t._v("对象, "),_("code",[t._v("offset")]),t._v(": 距离拖蓝对象开始位置出的偏移量")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("equals()")])]),t._v(" "),_("td",[t._v("判断给定的拖蓝对象是否和当前的拖蓝对象表示的是同一个区域")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("traversal(doFn,filterFn)")])]),t._v(" "),_("td",[t._v("遍历拖蓝内的节点，每当遍历到一个节点时，都会执行"),_("code",[t._v("doFn")]),t._v("函数，参数为当前节点。"),_("code",[t._v("filterFn")]),t._v("，可选，过滤器，符合该过滤器条件的节点才会执行"),_("code",[t._v("doFn")]),t._v("函数。")])])])])])}),[],!1,null,null,null);v.default=d.exports}}]);