(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{526:function(t,s,a){"use strict";a.r(s);var n=a(15),v=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"当小数遇上二进制-全面解析js中的小数二进制计算-附赠0-1-0-2-0-3问题解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当小数遇上二进制-全面解析js中的小数二进制计算-附赠0-1-0-2-0-3问题解释"}},[t._v("#")]),t._v(" 当小数遇上二进制——全面解析JS中的小数二进制计算（附赠0.1+0.2 !== 0.3问题解释）")]),t._v(" "),a("h2",{attrs:{id:"二进制小数如何转换为十进制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制小数如何转换为十进制"}},[t._v("#")]),t._v(" 二进制小数如何转换为十进制")]),t._v(" "),a("p",[t._v("二进制转换十进制的方法是：")]),t._v(" "),a("ul",[a("li",[t._v("从二进制数的最低位开始，每一位乘以对应的2的幂数，然后将最终的结果小数部分与整数部分分别相加")]),t._v(" "),a("li",[t._v("对应的2的幂，以个位为0，向高位依次增1，向地位依次减1；")])]),t._v(" "),a("p",[t._v("举个例子： 以二进制小数"),a("code",[t._v("1100.0011")]),t._v("为例：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("二进制小数位")]),t._v(" "),a("th",[t._v("1")]),t._v(" "),a("th",[t._v("1")]),t._v(" "),a("th",[t._v("0")]),t._v(" "),a("th",[t._v("0")]),t._v(" "),a("th",[t._v(".")]),t._v(" "),a("th",[t._v("0")]),t._v(" "),a("th",[t._v("0")]),t._v(" "),a("th",[t._v("1")]),t._v(" "),a("th",[t._v("1")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("对应2的幂")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v(".")]),t._v(" "),a("td",[t._v("-1")]),t._v(" "),a("td",[t._v("-2")]),t._v(" "),a("td",[t._v("-3")]),t._v(" "),a("td",[t._v("-4")])]),t._v(" "),a("tr",[a("td",[t._v("乘幂计算")]),t._v(" "),a("td",[t._v("1 * 2"),a("sup",[t._v("3")])]),t._v(" "),a("td",[t._v("1 * 2"),a("sup",[t._v("2")])]),t._v(" "),a("td",[t._v("0 * 2"),a("sup",[t._v("1")])]),t._v(" "),a("td",[t._v("0 * 2"),a("sup",[t._v("0")])]),t._v(" "),a("td",[t._v(".")]),t._v(" "),a("td",[t._v("0 * 2"),a("sup",[t._v("-1")])]),t._v(" "),a("td",[t._v("0 * 2"),a("sup",[t._v("-2")])]),t._v(" "),a("td",[t._v("1 * 2"),a("sup",[t._v("-3")])]),t._v(" "),a("td",[t._v("1 * 2"),a("sup",[t._v("-4")])])]),t._v(" "),a("tr",[a("td",[t._v("结果")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v(".")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0.125")]),t._v(" "),a("td",[t._v("0.0625")])])])]),t._v(" "),a("p",[t._v("当幂为负数时，乘幂计算实际上就是除以对应幂数的倒数，即1 *  2"),a("sup",[t._v("-3")]),t._v("  = 1 / 2"),a("sup",[t._v("3")]),t._v("  = 1/8 = 0.125;")]),t._v(" "),a("p",[t._v("所以最终的结果就是 8 + 4 . 0.125 + 0.0625 = 12.1875;")]),t._v(" "),a("p",[t._v("我们在浏览器控制台验证一下，看是否正确:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/hjb2722404/tuchuang/raw/master/img/202109271058663.png",alt:"image-20210927105831566"}})]),t._v(" "),a("p",[t._v("二进制转十进制"),a("code",[t._v("javascript")]),t._v("实现：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里参数n要直接传入二进制小数的字符串形式，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果直接传入一个二进制小数，无论是利用'' +n 还是利用String(n)去转字符串，都会将原值截断，只保留19位，导致最后计算错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BinToDec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let arr = ('' + n).split('.');  这样会导致计算错误。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ZS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" zsSum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xsSum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ZS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ZS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        zsSum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            xsSum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" zsSum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" xsSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("h2",{attrs:{id:"十进制小数如何转为二进制小数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十进制小数如何转为二进制小数"}},[t._v("#")]),t._v(" 十进制小数如何转为二进制小数")]),t._v(" "),a("p",[t._v("十进制小数转换为二进制是整数部分与小数部分分别计算，然后再相加的。")]),t._v(" "),a("h3",{attrs:{id:"整数十进制转二进制-除2取余法【短除法】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数十进制转二进制-除2取余法【短除法】"}},[t._v("#")]),t._v(" 整数十进制转二进制 —— 除2取余法【短除法】")]),t._v(" "),a("p",[t._v("不断除以2，直到商为0，每一步得到的余数依次由低到高填充到二进制的位置里。")]),t._v(" "),a("p",[t._v("因为任何一个十进制除以2的余数要么是1，要么是0，所以最后这些余数就构成了最后的二进制数。")]),t._v(" "),a("p",[t._v("比如将"),a("code",[t._v("174")]),t._v(" 这个数字转换为二进制的过程：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("除以2")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("商")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("余数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("二进制第几位")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("174/2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("87")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("87/2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("43")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("43/2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("21")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("21/2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("10/2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("5/2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("5")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("2/2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("6")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1/2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("7")])])])]),t._v(" "),a("p",[t._v("所以，得到十进制174转换为二进制为： "),a("code",[t._v("10101110")]),t._v(" (注意由高位到低位书写，和表格中计算得到的顺序相反)")]),t._v(" "),a("p",[t._v("用"),a("code",[t._v("javascript")]),t._v(" 递归实现：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("：\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * [integerToBin 整数转二进制]\n    *\n    * @param   {[type]}       n    [n description]\n    *\n    * @return  {[]}                [return description]\n    */")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("integerToBin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果商大于0，继续递归调用，否则返回空字符串用于与前面的结果连接")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得数字除2后的商")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" quotient "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" remainder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("integerToBin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quotient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" remainder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("h3",{attrs:{id:"小数十进制转二进制-乘2取整法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小数十进制转二进制-乘2取整法"}},[t._v("#")]),t._v(" 小数十进制转二进制——乘2取整法")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("将小数的小数部分取出，乘以2，将得到的结果中的整数部分作为二进制小数的项")])]),t._v(" "),a("li",[a("p",[t._v("得到结果中的小数部分重复第一步的步骤")])]),t._v(" "),a("li",[a("p",[t._v("直到某一步乘以2的值的小数部分为0，或者小数部分形成循环小数则停止")]),t._v(" "),a("p",[t._v("比如 "),a("code",[t._v("0.1875")]),t._v("这个十进制小数，计算转换为二进制的过程：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("乘以2")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("积")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("整数部分")]),t._v(" "),a("th",[t._v("小数部分")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("0.1875 * 2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.375")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),a("td",[t._v("0.375")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("0.375 * 2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.75")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),a("td",[t._v("0.75")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("0.75 * 2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1.5")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",[t._v("0.5")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("0.5 * 2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1.0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",[t._v("0")])])])]),t._v(" "),a("p",[t._v("得到结果为："),a("code",[t._v("0011")]),t._v(" (与整数转换不同，这里是顺序)")]),t._v(" "),a("p",[t._v("用"),a("code",[t._v("javascript")]),t._v(" 的递归实现：")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * [fracToBin 小数转二进制]\n     *\n     * @param   {[type]}       n     [n 需要转换为二进制的小数]\n     * @param   {[type]}       bits  [bits 准换后的二进制小数的位数]\n     * @param   {undefined[]}  bin   [arr 转换后的二进制小数，默认为空]\n     *\n     * @return  {[]}                 [return description]\n     */")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fracToBin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("49")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果二进制位小于给定的位数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" bits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 将需要转换的小数分为整数部分与小数部分，获得小数部分")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 小数部分乘以2")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2.1小数部分字符串转数字")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xsNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" xs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.2 小数部分乘以2")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xsNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 取出数字的整数部分拼接到二进制小数的结果中")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            bin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" ta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果小数部分等于0，则返回")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则递归")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fracToBin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])]),a("p",[t._v("用代码表示十进制转换二进制的整体计算过程：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * [DecToBin 十进制转二进制]\n    *\n    * @param   {[type]}  n  [n description]\n    *\n    * @return  {[type]}     [return description]\n    */")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DecToBin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" inter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" frac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        inter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("integerToBin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        frac "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fracToBin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("inter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" frac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DecToBin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3555")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[t._v("当然，以上代码仅用于展示十进制小数转换为二进制小数的过程，实际开发中，我们可以直接像下面这样转换：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3555")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"二进制小数的存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制小数的存储"}},[t._v("#")]),t._v(" 二进制小数的存储")]),t._v(" "),a("h3",{attrs:{id:"浮点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数"}},[t._v("#")]),t._v(" 浮点数")]),t._v(" "),a("p",[t._v("我们将二进制小数算出来还不算完，还要明白计算机中如何存储二进制小数的。")]),t._v(" "),a("p",[t._v("小数，在计算机语言里，准确应该叫做浮点数。")]),t._v(" "),a("p",[t._v("而浮点数根据精确度不同分为很多种，最常用的有两种：")]),t._v(" "),a("ul",[a("li",[t._v("单精度浮点数，采用32位二进制位存储")]),t._v(" "),a("li",[t._v("双精度浮点数，采用64位二进制位存储")])]),t._v(" "),a("h3",{attrs:{id:"浮点数精度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数精度"}},[t._v("#")]),t._v(" 浮点数精度")]),t._v(" "),a("p",[t._v("所谓精度，就是二进制数能够表达的数的精确度，在计算机中，二进制的存储存在着浮点数精度丢失的风险。")]),t._v(" "),a("p",[t._v("我们来看下小数点后四位能够用二进制所表示的十进制数：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("二进制数")]),t._v(" "),a("th",[t._v("对应的十进制数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0.0000")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("0.0001")]),t._v(" "),a("td",[t._v("0.0625")])]),t._v(" "),a("tr",[a("td",[t._v("0.0010")]),t._v(" "),a("td",[t._v("0.125")])]),t._v(" "),a("tr",[a("td",[t._v("0.0011")]),t._v(" "),a("td",[t._v("0.1875")])]),t._v(" "),a("tr",[a("td",[t._v("0.0100")]),t._v(" "),a("td",[t._v("0.25")])]),t._v(" "),a("tr",[a("td",[t._v("0.0101")]),t._v(" "),a("td",[t._v("0.3125")])]),t._v(" "),a("tr",[a("td",[t._v("0.0110")]),t._v(" "),a("td",[t._v("0.375")])]),t._v(" "),a("tr",[a("td",[t._v("0.0111")]),t._v(" "),a("td",[t._v("0.4375")])]),t._v(" "),a("tr",[a("td",[t._v("0.1000")]),t._v(" "),a("td",[t._v("0.5")])]),t._v(" "),a("tr",[a("td",[t._v("0.1001")]),t._v(" "),a("td",[t._v("0.5625")])]),t._v(" "),a("tr",[a("td",[t._v("0.1010")]),t._v(" "),a("td",[t._v("0.625")])]),t._v(" "),a("tr",[a("td",[t._v("0.1011")]),t._v(" "),a("td",[t._v("0.6875")])]),t._v(" "),a("tr",[a("td",[t._v("0.1100")]),t._v(" "),a("td",[t._v("0.75")])]),t._v(" "),a("tr",[a("td",[t._v("0.1101")]),t._v(" "),a("td",[t._v("0.8125")])]),t._v(" "),a("tr",[a("td",[t._v("0.1110")]),t._v(" "),a("td",[t._v("0.875")])]),t._v(" "),a("tr",[a("td",[t._v("0.1111")]),t._v(" "),a("td",[t._v("0.9375")])])])]),t._v(" "),a("p",[t._v("这里，左面这一列的二进制数是连续的，它已经穷尽了四位二进制所能表达的所有二进制数")]),t._v(" "),a("p",[t._v("但右边十进制这一列却不是连贯的。")]),t._v(" "),a("p",[t._v("想象一下，我们如何使用四位二进制来展示 0.0715这个数字？")]),t._v(" "),a("p",[t._v("答案是，我们无法用四位二进制来表示，甚至无法用有限的二进制位来表示，按照我们上面介绍过的十进制小数转换为二进制小数的方法，它将得到一个无限小数，然而计算机存储是有上限的，不可能给它无数个位来存储，所以就会将超出最高存储位数上限的部分给截掉，这就是精度丢失的原因。")]),t._v(" "),a("h3",{attrs:{id:"浮点数存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数存储"}},[t._v("#")]),t._v(" 浮点数存储")]),t._v(" "),a("p",[t._v("根据IEEE 754规范，计算机对浮点数的存储总共分为三部分：")]),t._v(" "),a("p",[a("strong",[t._v("符号位 +  指数位 + 尾数位")])]),t._v(" "),a("p",[t._v("每部分的位数根据精度不同而不同，比如")]),t._v(" "),a("ul",[a("li",[t._v("32位单精度浮点数的存储格式： 1位符号位 +  8 位指数位 + 23 位尾数位")]),t._v(" "),a("li",[t._v("64位双精度浮点数的存储格式： 1位符号位 + 11位指数位 + 52位尾数位")])]),t._v(" "),a("p",[t._v("上述三部分我们分别解释下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("符号位，代表数字的正负，为【1】时表示【负数】，为【0】时表示【正数或者0】")])]),t._v(" "),a("li",[a("p",[t._v("尾数位")]),t._v(" "),a("p",[t._v("我们都知道，一个十进制数可以使用多种方式表达，比如"),a("code",[t._v("3.14")]),t._v("这个十进制数，他可以表达为以下几种形式：")]),t._v(" "),a("ul",[a("li",[t._v("314 * 10"),a("sup",[t._v("-2")])]),t._v(" "),a("li",[t._v("0.314 * 10"),a("sup",[t._v("1")])]),t._v(" "),a("li",[t._v("0.00314 * 10"),a("sup",[t._v("3")])])]),t._v(" "),a("p",[t._v("为了方便计算机处理，科学家们就规定了一个对于十进制数统一的表示规则：小数点前面是0，小数点后面第1位不能是0.")]),t._v(" "),a("p",[t._v("所以所有十进制数有了相同的表达形式：")]),t._v(" "),a("ul",[a("li",[t._v("3.14 => 0.314 * 10"),a("sup",[t._v("1")])]),t._v(" "),a("li",[t._v("175 => 0.175 * 10"),a("sup",[t._v("3")])]),t._v(" "),a("li",[t._v("0.003 => 0.3 * 10"),a("sup",[t._v("-2")])])]),t._v(" "),a("p",[t._v("同样地，二进制小数也可以有多种表达形式，比如"),a("code",[t._v("10.10")]),t._v("这个二进制数，可以表达为：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("10.10")]),t._v(" * 2"),a("sup",[t._v("0")])]),t._v(" "),a("li",[a("code",[t._v("1.010")]),t._v(" * 2"),a("sup",[t._v("1")])]),t._v(" "),a("li",[a("code",[t._v("101.0")]),t._v(" * 2"),a("sup",[t._v("-1")])])]),t._v(" "),a("p",[t._v("为了计算机方便处理，计算机科学家规定了对于一个二进制小数的表示规则： 将小数点前面的值固定为1，并且确保小数点后面的长度为规定的精度的尾数位数。")]),t._v(" "),a("p",[t._v("所以所有的二进制小数就有了相同的表达形式（以32位精度为例，其尾数尾数位23位）：")]),t._v(" "),a("ul",[a("li",[t._v("10.10  =>  "),a("code",[t._v("1.01000000000000000000000")]),t._v(" * 2"),a("sup",[t._v("1")])]),t._v(" "),a("li",[t._v("0.0010  => "),a("code",[t._v("1.00000000000000000000000")]),t._v(" * 2"),a("sup",[t._v("-3")])]),t._v(" "),a("li",[t._v("100.1 =>  "),a("code",[t._v("1.00100000000000000000000")]),t._v(" * 2"),a("sup",[t._v("2")])])]),t._v(" "),a("p",[t._v("而且既然规定了所有数字的整数各位都是1，那么为了节省存储空间，这个1就可以省略了，最后仅保留小数部分，就是这个二进制小数的尾数，以上面三个为例：")]),t._v(" "),a("ul",[a("li",[t._v("10.10的尾数： 01000000000000000000000；")]),t._v(" "),a("li",[t._v("0.0010的尾数： 00000000000000000000000；")]),t._v(" "),a("li",[t._v("100.1 的尾数： 00100000000000000000000；")])])]),t._v(" "),a("li",[a("p",[t._v("指数位")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("指数位采用EXCESS系统表现")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("EXCESS 系统表现")]),t._v("是指，通过将指数部分表示范围的中间值设为 0，使得负数不 需要用符号来表示")])]),t._v(" "),a("li",[a("p",[t._v("拿扑克牌距离，比如我们有从A到K十三张扑克牌，现在我们以中间的 7 为 0，则根据EXCESS系统，形成了以下对应关系：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("牌面值")]),t._v(" "),a("th",[t._v("EXCESS系统值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("A")]),t._v(" "),a("td",[t._v("-6")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("-5")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("-4")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("-3")])]),t._v(" "),a("tr",[a("td",[t._v("5")]),t._v(" "),a("td",[t._v("-2")])]),t._v(" "),a("tr",[a("td",[t._v("6")]),t._v(" "),a("td",[t._v("-1")])]),t._v(" "),a("tr",[a("td",[t._v("7")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("8")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("9")]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("10")]),t._v(" "),a("td",[t._v("3")])]),t._v(" "),a("tr",[a("td",[t._v("J")]),t._v(" "),a("td",[t._v("4")])]),t._v(" "),a("tr",[a("td",[t._v("Q")]),t._v(" "),a("td",[t._v("5")])]),t._v(" "),a("tr",[a("td",[t._v("K")]),t._v(" "),a("td",[t._v("6")])])])])]),t._v(" "),a("li",[a("p",[t._v("同样地，但精度为32位时，指数位为8位，它能表示的最大二进制数为"),a("code",[t._v("11111111")]),t._v("，即255，我们取它中间的数，即使用"),a("code",[t._v("11111111")]),t._v(" 除以2，得到二进制数"),a("code",[t._v("01111111")]),t._v("（二进制中，一个数除以2实际上就是右移一位，左面补0），"),a("code",[t._v("01111111")]),t._v("的十进制数对应的是127，根据EXCESS系统要求，我们将中间值127表示为0， 则最终会形成类似下面的表示")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("二进制值")]),t._v(" "),a("th",[t._v("十进制值")]),t._v(" "),a("th",[t._v("EXCESS值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("……")]),t._v(" "),a("td",[t._v("……")]),t._v(" "),a("td",[t._v("……")])]),t._v(" "),a("tr",[a("td",[t._v("1111100")]),t._v(" "),a("td",[t._v("124")]),t._v(" "),a("td",[t._v("-3")])]),t._v(" "),a("tr",[a("td",[t._v("1111101")]),t._v(" "),a("td",[t._v("125")]),t._v(" "),a("td",[t._v("-2")])]),t._v(" "),a("tr",[a("td",[t._v("1111110")]),t._v(" "),a("td",[t._v("126")]),t._v(" "),a("td",[t._v("-1")])]),t._v(" "),a("tr",[a("td",[t._v("01111111")]),t._v(" "),a("td",[t._v("127")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("10000000")]),t._v(" "),a("td",[t._v("128")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("10000001")]),t._v(" "),a("td",[t._v("129")]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("10000010")]),t._v(" "),a("td",[t._v("130")]),t._v(" "),a("td",[t._v("3")])]),t._v(" "),a("tr",[a("td",[t._v("……")]),t._v(" "),a("td",[t._v("……")]),t._v(" "),a("td",[t._v("……")])])])])]),t._v(" "),a("li",[a("p",[t._v("所以上例中的三个数字的对应指数位分别是：（使用小数通用表示规则写出后，指数是2的n次方，这里的n代表EXCESS值，而指数位存储的则是对应的二进制值）")]),t._v(" "),a("ul",[a("li",[t._v("10.10的指数位：10000000")]),t._v(" "),a("li",[t._v("0.0010的指数位：1111100")]),t._v(" "),a("li",[t._v("100.1的指数位： 10000001")])])])]),t._v(" "),a("p",[t._v("所以，上面三个小数"),a("code",[t._v("10.10")]),t._v("，"),a("code",[t._v("0.0010")]),t._v("，"),a("code",[t._v("100.1")]),t._v("，最终的二进制存储为（按照32位精度）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("二进制小数")]),t._v(" "),a("th",[t._v("统一表达")]),t._v(" "),a("th",[t._v("正负")]),t._v(" "),a("th",[t._v("指数")]),t._v(" "),a("th",[t._v("符号位")]),t._v(" "),a("th",[t._v("指数位")]),t._v(" "),a("th",[t._v("尾数位")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("10.10")]),t._v(" "),a("td",[a("code",[t._v("1.01000000000000000000000")]),t._v(" * 2"),a("sup",[t._v("1")])]),t._v(" "),a("td",[t._v("正")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("10000000")]),t._v(" "),a("td",[t._v("01000000000000000000000")])]),t._v(" "),a("tr",[a("td",[t._v("0.0010")]),t._v(" "),a("td",[a("code",[t._v("1.00000000000000000000000")]),t._v(" * 2"),a("sup",[t._v("-3")])]),t._v(" "),a("td",[t._v("正")]),t._v(" "),a("td",[t._v("-3")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("1111100")]),t._v(" "),a("td",[t._v("00000000000000000000000")])]),t._v(" "),a("tr",[a("td",[t._v("100.1")]),t._v(" "),a("td",[a("code",[t._v("1.00100000000000000000000")]),t._v(" * 2"),a("sup",[t._v("2")])]),t._v(" "),a("td",[t._v("正")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("10000001")]),t._v(" "),a("td",[t._v("00100000000000000000000")])])])]),t._v(" "),a("p",[t._v("最终存储的二进制值就是 符号位+指数位+尾数位。")]),t._v(" "),a("p",[t._v("上表是32位精度下的存储，64位精度时的尾数为52位，指数中间值是01111111111 （即十进制的1023）对应EXCESS系统的0。其它以此类推。")])])]),t._v(" "),a("h2",{attrs:{id:"二进制知识实战巩固"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制知识实战巩固"}},[t._v("#")]),t._v(" 二进制知识实战巩固")]),t._v(" "),a("p",[t._v("我们学习了以上知识后，为了检验我们是否掌握，就拿"),a("code",[t._v("javascript")]),t._v("中最经典的"),a("code",[t._v("0.1+0.2 !=== 0.3")]),t._v(" 为例，来分析一下其中的原因。")]),t._v(" "),a("p",[t._v("首先，我们要知道，"),a("code",[t._v("javascript")]),t._v(" 存储的二进制数是64位精度的")]),t._v(" "),a("h3",{attrs:{id:"_1-转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-转换"}},[t._v("#")]),t._v(" 1.转换")]),t._v(" "),a("p",[t._v("首先，我们分别将"),a("code",[t._v("0.1")]),t._v("和"),a("code",[t._v("0.2")]),t._v("转换为二进制小数，可以利用我们上面学过的转换方法，得到的结果是(保留了60位小数)：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("十进制小数")]),t._v(" "),a("th",[t._v("二进制小数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("0.1")])]),t._v(" "),a("td",[a("code",[t._v("0.000110011001100110011001100110011001100110011001100110011001")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("0.2")])]),t._v(" "),a("td",[a("code",[t._v("0.001100110011001100110011001100110011001100110011001100110011")])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-改写为统一表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-改写为统一表达式"}},[t._v("#")]),t._v(" 2.改写为统一表达式")]),t._v(" "),a("p",[t._v("我们将二进制小数改写为统一表达式，由于统一表达式要求小数点后的位数要和当前精度（64）位的尾数位数一致（52位）,而我们的二进制小数都保留了60位，即使经过改写为统一表达式后左移了几位，但还是多余52位，所以多余部分的我们要截去。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("二进制小数")]),t._v(" "),a("th",[t._v("统一表达式")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("0.000110011001100110011001100110011001100110011001100110011001")])]),t._v(" "),a("td",[a("code",[t._v("1.1001100110011001100110011001100110011001100110011001")]),t._v(" * 2"),a("sup",[t._v("-4")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("0.001100110011001100110011001100110011001100110011001100110011")])]),t._v(" "),a("td",[a("code",[t._v("1.1001100110011001100110011001100110011001100110011001")]),t._v(" * 2"),a("sup",[t._v("-3")])])])])]),t._v(" "),a("p",[a("strong",[t._v("注意：截取的时候不是直接去掉，而是为最大限度保留精度，采取 【0舍1入】的规则")])]),t._v(" "),a("p",[t._v("上面两个二进制小数的小数部分第53位都为1，所以舍去的时候要加1，")]),t._v(" "),a("p",[t._v("即上面两个表达式其实不是最终表达式，最终表达式要在尾数部分+1，得到：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("0.1")]),t._v(" => "),a("code",[t._v("1.1001100110011001100110011001100110011001100110011010")]),t._v(" * 2"),a("sup",[t._v("-4")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("0.2")]),t._v(" => "),a("code",[t._v("1.1001100110011001100110011001100110011001100110011010")]),t._v(" * 2"),a("sup",[t._v("-3")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-获得最终存储值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-获得最终存储值"}},[t._v("#")]),t._v(" 3.获得最终存储值")]),t._v(" "),a("p",[t._v("我们要分别转换为统一表达式后的符号位、指数位、尾数位")]),t._v(" "),a("p",[t._v("这里，尾数可以直接从表达式里拿到，符号位都是0（正数），唯一剩余的就是获取指数位了")]),t._v(" "),a("p",[t._v("在64位精度下，指数位位11位，所以最大二进制值为"),a("code",[t._v("1111 1111 111")]),t._v("，取中间数，即除以2，右移一位，左位补零，得到"),a("code",[t._v("0111 1111 111")]),t._v(" （十进制1023）")]),t._v(" "),a("p",[t._v("然后根据EXCESS系统规则列出它前后的对应值：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("二进制值")]),t._v(" "),a("th",[t._v("十进制值")]),t._v(" "),a("th",[t._v("EXCESS系统值（指数值）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("011 1111 1011")]),t._v(" "),a("td",[t._v("1019")]),t._v(" "),a("td",[t._v("-4")])]),t._v(" "),a("tr",[a("td",[t._v("011 1111 1100")]),t._v(" "),a("td",[t._v("1020")]),t._v(" "),a("td",[t._v("-3")])]),t._v(" "),a("tr",[a("td",[t._v("011 1111 1101")]),t._v(" "),a("td",[t._v("1021")]),t._v(" "),a("td",[t._v("-2")])]),t._v(" "),a("tr",[a("td",[t._v("011 1111 1110")]),t._v(" "),a("td",[t._v("1022")]),t._v(" "),a("td",[t._v("-1")])]),t._v(" "),a("tr",[a("td",[t._v("0111 1111 111")]),t._v(" "),a("td",[t._v("1023")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("100 0000 0000")]),t._v(" "),a("td",[t._v("1024")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("100 0000 0001")]),t._v(" "),a("td",[t._v("1025")]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("100 0000 0010")]),t._v(" "),a("td",[t._v("1026")]),t._v(" "),a("td",[t._v("3")])]),t._v(" "),a("tr",[a("td",[t._v("100 0000 0011")]),t._v(" "),a("td",[t._v("1027")]),t._v(" "),a("td",[t._v("……")])])])]),t._v(" "),a("p",[t._v("那么"),a("code",[t._v("0.1")]),t._v(" 和 "),a("code",[t._v("0.2")]),t._v("的指数位分别是EXCESS系统"),a("code",[t._v("-4")]),t._v("和"),a("code",[t._v("-3")]),t._v("所对应的值：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("0.1")]),t._v(" 指数位："),a("code",[t._v("011 1111 1011")])]),t._v(" "),a("li",[a("code",[t._v("0.2")]),t._v(" 指数位： "),a("code",[t._v("011 1111 1100")])])]),t._v(" "),a("p",[t._v("由此，获得"),a("code",[t._v("0.1")]),t._v("与"),a("code",[t._v("0.2")]),t._v("的二进制最终存储值：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("十进制值")]),t._v(" "),a("th",[t._v("二进制存储值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("0.1")])]),t._v(" "),a("td",[a("code",[t._v("0 01111111011 1001100110011001100110011001100110011001100110011010")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("0.2")])]),t._v(" "),a("td",[a("code",[t._v("0 01111111100 1001100110011001100110011001100110011001100110011010")])])])])]),t._v(" "),a("h3",{attrs:{id:"计算和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算和"}},[t._v("#")]),t._v(" 计算和")]),t._v(" "),a("p",[t._v("现在，我们将上表中两个二进制存储值进行相加，逢二进一，得到二进制存储结果：")]),t._v(" "),a("p",[a("code",[t._v("0 0111 1111 101 0011001100110011001100110011001100110011001100110100")])]),t._v(" "),a("p",[t._v("那么我们如何将它还原回二进制进而还原回十进制小数呢？")]),t._v(" "),a("p",[t._v("逆向工程开始：")]),t._v(" "),a("ul",[a("li",[t._v("第1位0，代表正数")]),t._v(" "),a("li",[t._v("第2到12位，代表指数，"),a("code",[t._v("0111 1111 101")]),t._v(" 对照上面的EXCESS系统表，是十进制的1021，对应指数位"),a("code",[t._v("-2")])]),t._v(" "),a("li",[t._v("第13位到64位，"),a("code",[t._v("0011001100110011001100110011001100110011001100110100")]),t._v(" 代表尾数")]),t._v(" "),a("li",[t._v("还原为统一表达式： "),a("code",[t._v("1.0011001100110011001100110011001100110011001100110100")]),t._v(" * 2"),a("sup",[t._v("-2")])]),t._v(" "),a("li",[t._v("得到无指数形式：     "),a("code",[t._v("0.010011001100110011001100110011001100110011001100110100")])])]),t._v(" "),a("p",[t._v("然后我们利用第一节的二进制小数转换十进制的方法，得到结果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/hjb2722404/tuchuang/raw/master/img/202109271805829.png",alt:"image-20210927180509588"}})]),t._v(" "),a("p",[t._v("所以，在"),a("code",[t._v("javascript")]),t._v("中，"),a("code",[t._v("0.1 + 0.2 === 0.30000000000000004")]),t._v(" 会返回"),a("code",[t._v("true")]),t._v(";")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/hjb2722404/tuchuang/raw/master/img/202109271806356.png",alt:"image-20210927180623246"}})])])}),[],!1,null,null,null);s.default=v.exports}}]);