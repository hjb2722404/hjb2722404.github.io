(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{452:function(e,v,_){"use strict";_.r(v);var a=_(15),s=Object(a.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"关于git的rebase操作与cherry-pick操作的建议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关于git的rebase操作与cherry-pick操作的建议"}},[e._v("#")]),e._v(" 关于Git的"),_("code",[e._v("rebase")]),e._v("操作与"),_("code",[e._v("cherry-pick")]),e._v("操作的建议")]),e._v(" "),_("h2",{attrs:{id:"缘起"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#缘起"}},[e._v("#")]),e._v(" 缘起")]),e._v(" "),_("p",[e._v("最近一次新疆采编发版时，发现代码中有一处配置的一个变量没有了，经过查询Git的提交历史发现这次改动涉及的提交"),_("code",[e._v("bbb")]),e._v("的作者是开发人员A，但A君表示从来没有动过这块代码。")]),e._v(" "),_("p",[e._v("这就很奇怪了，明明Git上显示的作者是A君，但A又表示不是自己改的，那到底是Git在说谎还是A君在说谎？")]),e._v(" "),_("p",[e._v("经过线下询问其他采编开发人员，并对比Git的分支图谱，多方查证，终于弄清楚了原因：")]),e._v(" "),_("ol",[_("li",[e._v("开发人员B君要开发的一个功能正好在产品分支上已经有了，所以采用了"),_("code",[e._v("cherry-pick")]),e._v("的方式从产品分支将这个功能的那次提交"),_("code",[e._v("000")]),e._v("(作者是D，提交者是A)从产品分支复制到了新疆开发分支1上面。复制时产生了冲突，B君解决了冲突，进行了提交"),_("code",[e._v("aaa")]),e._v("。")]),e._v(" "),_("li",[e._v("在解决冲突的过程中，由于那个丢失的变量在产品分支上没有，而在新疆分支上有，但是那个变量上面便是要从产品分支上复制过来的代码，所以B君直接通过工具采用了产品分支的代码，导致新疆分支上有的那个变量被产品分支代码所替换而丢失。")]),e._v(" "),_("li",[e._v("B君继续在开发分支1上进行了其它功能的开发，进行了两次提交，然后提了"),_("code",[e._v("MR")]),e._v("给C君，请求将开发分支1合并到主开发分支0上面。")]),e._v(" "),_("li",[e._v("这时D君说，不用合并了，他要直接"),_("code",[e._v("rebase")]),e._v("，所以C君关闭了"),_("code",[e._v("MR")]),e._v("，而D君使用"),_("code",[e._v("rebase")]),e._v("命令直接将开发分支1上的这几次提交复制到了主开发分支0上，复制后提交"),_("code",[e._v("aaa")]),e._v("变为了提交"),_("code",[e._v("bbb")]),e._v("。")])]),e._v(" "),_("p",[e._v("然后就是后来，我们开头说的，发版时发现了变量丢失的问题。")]),e._v(" "),_("p",[e._v("这个过程中，我们产生过两个疑问：")]),e._v(" "),_("ol",[_("li",[e._v("我们通过历史提交查询的时候为什么没有查询到提交"),_("code",[e._v("aaa")]),e._v("？")]),e._v(" "),_("li",[e._v("为什么提交"),_("code",[e._v("bbb")]),e._v("的作者不是B君而是A君。")])]),e._v(" "),_("h2",{attrs:{id:"破案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#破案"}},[e._v("#")]),e._v(" 破案")]),e._v(" "),_("p",[e._v("解决这两个问题，我们先要弄清楚：")]),e._v(" "),_("p",[e._v("当我们查看提交历史的时候，所显示的"),_("code",[e._v("Author")]),e._v("（作者）真的就是这次提交中那些文件的真正改动者吗？")]),e._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[e._v("$ "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" log\ncommit af7af21595aba7d6ac02b34c3a852ed267a395b7 "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("HEAD -"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" master, origin/master, origin/HEAD"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nAuthor: chen.chen "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("chenchen@trs.com.cn"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nDate:   Thu Aug "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("17")]),e._v(":55:12 "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("2021")]),e._v(" +0800\n\n    修复全部栏目检索问题\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br")])]),_("p",[e._v("首先，我们应该知道，Git中所谓的【提交】在底层实现上就是一个二进制对象，它存储在"),_("code",[e._v(".git/objects")]),e._v("目录下。")]),e._v(" "),_("p",[e._v("就比如上例中"),_("code",[e._v("af7af21")]),e._v("这次提交，其实指向的是"),_("code",[e._v(".git/objects/af/7af21595aba7d6ac02b34c3a852ed267a395b7")]),e._v("这个二进制对象，我们可以通过Git的底层命令来查看一下这个二进制对象的内容：")]),e._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[e._v("$ "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" cat-file -p af7af21\ntree 3ab963b8fca3658404126787e075b4d4dbdfc697\nparent ab8c90a1ca8544802c3e00b2ea5ccaf01d20976b\nauthor chen.chen "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("chenchen@trs.com.cn"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("1628157312")]),e._v(" +0800   \ncommitter chen.chen "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("chenchen@trs.com.cn"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("1628157312")]),e._v(" +0800\n\n修复全部栏目检索问题\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br")])]),_("p",[e._v("可以看到，这个提交对象了有两个和人员有关的属性：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("author")]),e._v("：代表这次提交所涉及的更改真正的作者")]),e._v(" "),_("li",[_("code",[e._v("committer")]),e._v("： 创建这个提交的人。")])]),e._v(" "),_("p",[e._v("从这一点来看，一般情况下，提交都是由作者进行的，那作者和提交者应该是同一个人。")]),e._v(" "),_("p",[e._v("但是，总有不一般的情况，就比如：")]),e._v(" "),_("ol",[_("li",[_("code",[e._v("cherry-pick")]),e._v("操作：A将另一个分支上的提交"),_("code",[e._v("a")]),e._v("复制到自己的分支时，会在当前分支上重新产生一个新的提交"),_("code",[e._v("b")]),e._v("，这个提交"),_("code",[e._v("b")]),e._v("的内容和提交"),_("code",[e._v("a")]),e._v("的内容一模一样，但是提交"),_("code",[e._v("a")]),e._v("的提交者将变成提交"),_("code",[e._v("b")]),e._v("的作者，而A将成为提交"),_("code",[e._v("a")]),e._v("的提交者。")]),e._v(" "),_("li",[_("code",[e._v("rebase")]),e._v("操作： 当A将另一个分支上的提交通过"),_("code",[e._v("rebase")]),e._v("复制到自己分支时，那个提交的作者不变，但提交者将由原来的提交者变为A。")]),e._v(" "),_("li",[_("code",[e._v("MR")]),e._v(" 操作：A在一个分支上进行了提交若干次提交后，发送了一个"),_("code",[e._v("MR")]),e._v("请求给B，B在合并时勾选了"),_("code",[e._v("合并提交")]),e._v("选项，这时A做的若干次提交将被合并为一个新的提交（相当于"),_("code",[e._v("rebase -i")]),e._v("操作），此时，这个新的提交的作者是A，提交者是B。")])]),e._v(" "),_("p",[e._v("而在本文开头所述那次事故，正好就是踩了这几个坑，我们来梳理一下整个过程：")]),e._v(" "),_("ol",[_("li",[e._v("C君在产品分支1上开发了若干功能（其中就包含B君要的那个），进行了提交，发送了一个"),_("code",[e._v("MR")]),e._v("请求给A君，A君勾选了【合并提交】选项后将产品分支1合并入了产品分支。此时D君做的所有提交被合并后生成了一个新的提交"),_("code",[e._v("000")]),e._v("，这个提交的作者是C，提交者是A。")]),e._v(" "),_("li",[e._v("B君在新疆开发分支1上进行了"),_("code",[e._v("cherry-pick")]),e._v("，将"),_("code",[e._v("000")]),e._v("分支复制到了开发分支1，解决冲突后提交，生成了提交"),_("code",[e._v("aaa")]),e._v("，此时"),_("code",[e._v("aaa")]),e._v("提交的作者是A，提交者是B。")]),e._v(" "),_("li",[e._v("D君使用了"),_("code",[e._v("rebase")]),e._v("操作将"),_("code",[e._v("aaa")]),e._v("从开发分支1复制到了开发分支0上，此时开发分支0上产生了提交"),_("code",[e._v("bbb")]),e._v(",这个提交的作者还是A，但提交者变成了D。")])]),e._v(" "),_("p",[e._v("当发现代码问题时，我们顺着开发分支0的提交历史去看，自然看到的作者是A。")]),e._v(" "),_("p",[e._v("所以，Git没有说谎，A也没有说谎，这是一场由A、B、C、D共同参与的【无心的共谋】。")]),e._v(" "),_("h2",{attrs:{id:"教训"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#教训"}},[e._v("#")]),e._v(" 教训")]),e._v(" "),_("p",[e._v("这次事故的原因找到后，我们从中应该学到一些东西。")]),e._v(" "),_("ol",[_("li",[_("code",[e._v("rebase")]),e._v("合并提交操作会重写提交历史。（"),_("code",[e._v("MR")]),e._v("时的合并提交其实就是"),_("code",[e._v("rebase -i")]),e._v("）")]),e._v(" "),_("li",[_("code",[e._v("rebase")]),e._v("复制提交操作后，提交历史无法反映提交来源自哪个分支以及被复制提交的原始信息")]),e._v(" "),_("li",[_("code",[e._v("cherry-pick")]),e._v("复制提交操作后，提交历史无法反映提交来源自哪个分支以及被复制提交的原始信息，并且无法真实反映被复制提交原来的作者信息。（当被复制提交作者与提交者不同时）")])]),e._v(" "),_("p",[e._v("这些特性的存在，会严重影响代码出问题时的溯源工作。")]),e._v(" "),_("p",[e._v("所以，这里做出如下建议，供大家讨论决定：")]),e._v(" "),_("ol",[_("li",[_("code",[e._v("rebase")]),e._v("操作不允许应用在共享分支上。（可以在自己的私有分支间随便折腾）")]),e._v(" "),_("li",[_("code",[e._v("cherry-pick")]),e._v("操作必须记录到单独日志文件里，注明原始分支和提交的相关信息。")])]),e._v(" "),_("p",[e._v("·")])])}),[],!1,null,null,null);v.default=s.exports}}]);